#!/bin/sh

escapePOSIX() {
	printf "'%s'\\n" "$(printf '%s' "$1" | sed -e "s/'/'\\\\''/g")"
}

getDeviceUnit() {
    escapePOSIX "$(systemd-escape --suffix='device' --path "$1" | sed 's/\\/\\\\/g' -)"
}

getPartlabel() {
    echo "home$(printf '%s' "$1" | openssl dgst -md5 -r | cut -d ' ' -f 1)"
}

usage() {
    echo "USAGE:"
    echo "luks-home"
    echo "    Unlock a home device home, arguments are required to be passed"
    echo "    as pam_exec.so would."
    echo "luks-home help"
    echo "    Print this usage information."
    echo "luks-home getlabel {username}"
    echo "    Print the encoded partition label derived from the given username."
    echo "luks-home setlabel {homepartition}:{username}"
    echo "    Set the encoded partition label on the block device"
    echo "    and prevent systemd trying to automount it."
}

if [ "$#" -gt 0 ]; then
    case "$1" in
    help)
        usage
        exit
        ;;
    getlabel)
        if [ -n "$2" ]; then
            getPartlabel "$2"
        else
            echo "argument required: {username}"
            exit 1
        fi
        exit
        ;;
    setlabel)
        if [ -n "$2" ]; then
            partition="$(realpath "$(printf '%s' "$2" | cut -d ':' -f 1)")"
            partnum="$(echo "${partition}" | grep -Po '^.*p\K\d+$')"
            dev="${partition%%"p${partnum}"}"
            username="$(printf '%s' "$2" | cut -d ':' -f 2)"
            partlabel="$(getPartlabel "${username}")"
            # set partition label
            sgdisk --change-name="${partnum}:${partlabel}" "${dev}"
            # do not automount
            sgdisk --attributes="${partnum}:set:63" "${dev}"
        else
            echo "argument required: {device}:{username}"
            exit 1
        fi
        exit
        ;;
    *)
        echo "invalid argument(s)"
        usage
        exit 1
        ;;
    esac
fi

MAPPEDNAME="home-${PAM_USER}"

if [ -b "/dev/mapper/${MAPPEDNAME}" ]; then
    exit 0  # already unlocked, therefor nothing to be done
fi

PARTLABEL="$(getPartlabel "${PAM_USER}")"
DEVICE="/dev/disk/by-partlabel/${PARTLABEL}"

if [ -b "${DEVICE}" ]; then
    systemd-cryptsetup attach "${MAPPEDNAME}" "${DEVICE}" "/dev/stdin" "luks,discard,noauto,headless,tpm2-measure-pcr=no"

    uid=$(id -u "${PAM_USER}")

    systemd-mount "/dev/mapper/${MAPPEDNAME}" "/home/${PAM_USER}" \
        --options=defaults,relatime \
        --property="Requires=user@${uid}.service" \
        --property="Before=user@${uid}.service"

    luksDeviceUnit="$(getDeviceUnit "$(realpath "${DEVICE}")")"
    mappedDeviceUnit="$(getDeviceUnit "/dev/mapper/${MAPPEDNAME}")"

    systemd-run \
        --unit="luks-${MAPPEDNAME}" \
        --service-type=oneshot \
        --remain-after-exit \
        --property="TimeoutStartSec=infinity" \
        --property="TimeoutStopSec=1" \
        --property="DefaultDependencies=no" \
        --property="BindsTo=${luksDeviceUnit}" \
        --property="After=${luksDeviceUnit}" \
        --property="BindsTo=${mappedDeviceUnit}" \
        --property="Requires=${MAPPEDNAME}.mount" \
        --property="Before=${MAPPEDNAME}.mount" \
        --property="Conflicts=umount.target" \
        --property="Before=umount.target" \
        --property="ExecStop=cryptsetup close ${MAPPEDNAME}" \
        "/usr/bin/true"
fi
